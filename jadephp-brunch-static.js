// Generated by CoffeeScript 1.12.7
(function() {
  var JadePhpBrunchStatic, _, jade, jadephp;

  jade = require('jade');

  jadephp = require('jade-php');

  _ = {
    merge: require('lodash.merge')
  };

  JadePhpBrunchStatic = (function() {
    function JadePhpBrunchStatic(config1) {
      var ref, ref1;
      this.config = config1;
      if ((ref = this.config) != null ? ref.fileMatch : void 0) {
        this.handles = this.config.fileMatch;
        delete this.config.fileMatch;
      }
      if ((ref1 = this.config) != null ? ref1.fileTransform : void 0) {
        this.transformPath = this.config.fileTransform;
        delete this.config.fileTransform;
      }
    }

    JadePhpBrunchStatic.prototype.handles = /.(pug|jade)$/;

    JadePhpBrunchStatic.prototype.transformPath = function(filename) {
      filename.replace(/\.php\.(pug|jade)$/, '.php');
      return filename.replace(/\.(pug|jade)$/, '.html');
    };

    JadePhpBrunchStatic.prototype.acceptsContext = true;

    JadePhpBrunchStatic.prototype.compile = function(data, filename, options, context, callback) {
      var opts;
      opts = _.merge({}, {
        filename: filename
      }, this.config, options != null ? options.pug : void 0);
      jadephp(jade);
      return callback(null, jade.render(data));
    };

    return JadePhpBrunchStatic;

  })();

  module.exports = function(config) {
    return new JadePhpBrunchStatic(config);
  };

}).call(this);
